rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to verify authenticated users
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if the update only affects the user's own reactions
    function isUpdatingOwnReactions() {
      let reactionsMap = request.resource.data.reactions;
      return request.auth != null && reactionsMap.keys().hasAny([request.auth.uid]);
    }

    match /firebase-discussion/{discussionId} {
      allow read, create: if true;
      allow update: if isAuthenticated() && (isUpdatingOwnReactions() ||
                    request.resource.data.keys().hasOnly(['comments']) ||
                    request.resource.data.keys().hasOnly(['replies']));
      allow delete: if false;

      // Match any document in the 'comments' subcollection of a discussion
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update: if isAuthenticated() && (isUpdatingOwnReactions() ||
                      request.resource.data.keys().hasOnly(['replies']));
        allow delete: if false;

        // Match any document in the 'replies' subcollection of a comment
        match /replies/{replyId} {
          allow read: if true;
          allow create: if isAuthenticated();
          // Only allow updates to own reactions by authenticated users
          allow update: if isAuthenticated() && isUpdatingOwnReactions();
          allow delete: if false;
        }
      }
    }
  }
}
